% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cutf.R
\name{cutf}
\alias{cutf}
\title{cut a Numeric Variable into Intervals}
\usage{
cutf(x, breaks, labels = NULL, include.lowest = FALSE, right = TRUE,
  dig.lab = 3L, ordered_result = FALSE, format_fun = formatC, ...)
}
\arguments{
\item{x}{a numeric vector which is to be converted to a factor by cutting.}

\item{breaks}{either a numeric vector of two or more unique cut points or a
    single number (greater than or equal to 2) giving the number of
    intervals into which \code{x} is to be cut.}

\item{labels}{labels for the levels of the resulting category.  By default,
    labels are constructed using \code{"(a,b]"} interval notation.  If
    \code{labels = FALSE}, simple integer codes are returned instead of
    a factor.}

\item{include.lowest}{logical, indicating if an \sQuote{x[i]} equal to
    the lowest (or highest, for \code{right = FALSE}) \sQuote{breaks}
    value should be included.}

\item{right}{logical, indicating if the intervals should be closed on
    the right (and open on the left) or vice versa.}

\item{dig.lab}{integer which is used when labels are not given.  It
    determines the number of digits used in formatting the break numbers.}

\item{ordered_result}{logical: should the result be an ordered factor?}

\item{format_fun}{formatting function}

\item{...}{additional arguments passed to \code{format_fun}}
}
\description{
This is a copy of the original \code{base::cut.default} function which uses the
additional parameters \code{format_fun} and \code{...} to apply custom formatting to
the input. By default it behaves exactly like \code{base::cut.default}
}
\examples{
set.seed(1)
Z <- 1000*stats::rnorm(10000)
table(cutf(Z, c(-10005, -5000, 100, 0, 50, 10000)))
table(cutf(Z, c(-10005, -5000, 100, 0, 50, 10000), format_fun = format))
table(cutf(Z, c(-10005, -5000, 100, 0, 50, 10000), format_fun = signif2))
table(cutf(Z, c(-10005, -5000, 100, 0, 50, 10000), format_fun = format_metric))
}
\seealso{
base::cut
}
